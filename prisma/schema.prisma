// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// criar uma migration: yarn prisma migrate dev
model User {
  id String @id @default(uuid())
  name String
  email String
  password String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("users")
}

model Category{
  id String @id @default(uuid())
  name String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  products Product[] 
  @@map("categories")
}

model Product {
  id String @id @default(uuid())
  name String
  description String
  price String
  banner String
  categoryId String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  category Category @relation(fields: [categoryId], references: [id])
  items Item[]
  @@map("products")
}

model Order {
  id String @id @default(uuid())
  table Int
  status Boolean @default(false)
  draft Boolean @default(true)
  name String?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  items Item[]
  @@map("orders")
}

model Item {
  id String @id @default(uuid())
  amount Int
  orderId String
  productId String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  order Order @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
  @@map("items")
}